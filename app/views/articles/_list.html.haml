#{ articles.total_count }件(正常終了： #{ Article.success.count } 件)
.paginate
  = paginate articles, remote: true
.main
  %table.table.table-striped.table-hover
    %tr
      %th.center ID
      %th.center 投稿先のサイト
      %th.center タイトル
      %th.center カテゴリ
      %th.center 本文
      %th.center ASIN
      %th.center ブログID
      %th.center 作成日
      %th.center 記事削除
      %th.center 記事削除日
      %th.center アクション
    - articles.each do |article|
      %tr
        %td.center= article.id
        %td.center= article.target
        %td.center{ class: ("red" if article.failed_flag?) }
          - if article.failed_flag?
            = article.title
          - else
            = link_to article.title, article_path(article)
        %td.center= article.category
        %td.center= simple_format article.body.truncate(50) if article.body.present?
        %td.center= article.asin
        %td.center= article.blog_id
        %td.center= l article.created_at
        %td.center.red= l article.deleted_at if article.deleted_at.present?
        %td.center
          - url_type = article.target == 'グラビア' ? 'idol' : article.target
          - if article.blog_id.present? && article.deleted_at.blank?
            = link_to '記事編集', edit_article_path(article), class: 'btn btn-info'
            %br
            %br
            = link_to '記事削除', rm_hatena_article_path(article, url_type: url_type), method: :delete, data: { confirm: "#{ article.title }を削除します。よろしいですか？" }, class: 'btn btn-danger', remote: true
          - elsif article.staging_flag?
            = link_to '本番反映', post_hatena_article_path(article, url_type: url_type), method: :post, class: 'btn btn-success'
            %br
            %br
            = link_to '記事非公開', rm_blog_article_path(article), method: :delete, data: { confirm: "#{ article.title }を削除します。よろしいですか？" }, class: 'btn btn-danger', remote: true
        %td.center= link_to 'データ削除', article_path(article), method: :delete, data: { confirm: "#{ article.title }を削除します。よろしいですか？" }, class: 'btn btn-danger', remote: true
.paginate
  = paginate articles, remote: true
